var Util = require("util");
var Querystring = require("querystring");
var SearchCriteria_1 = require("./SearchCriteria");
var SearchKeys_1 = require("./SearchKeys");
var Search = (function () {
    function Search() {
        this.criteria = new Array();
    }
    Search.prototype.test = function (entity) {
        var isMatch = true;
        for (var i = 0; i < this.criteria.length; i++) {
            var criteria = this.criteria[i];
            if (!criteria.test(entity)) {
                isMatch = false;
                break;
            }
        }
        return isMatch;
    };
    Search.parseString = function (querystring) {
        if (!querystring)
            return null;
        var query = Querystring.parse(querystring);
        return Search.parse(query);
    };
    Search.parse = function (query) {
        var searchParameter = query[SearchKeys_1.SearchKeys.search];
        var search = new Search();
        if (searchParameter != null) {
            try {
                searchParameter = JSON.parse(searchParameter);
            }
            catch (err) {
                throw Error(Util.format("Parameter \"%s\" could not be parsed as JSON: %s", SearchKeys_1.SearchKeys.search, err));
            }
            for (var key in searchParameter) {
                var rawCriteria = searchParameter[key];
                var criteria = new SearchCriteria_1.SearchCriteria(rawCriteria.fieldName, rawCriteria.operator, rawCriteria.value);
                try {
                    criteria.validate();
                }
                catch (err) {
                    throw Util.format("Search criteria for \"%s\" could not be validated: %s", key, err);
                }
                search.criteria.push(criteria);
            }
        }
        for (var key in query) {
            // Only parse keys which are not "special".
            if (SearchKeys_1.SearchKeys[key] == null) {
                var criteria = SearchCriteria_1.SearchCriteria.parse(key, query[key]);
                if (criteria != null) {
                    try {
                        criteria.validate();
                    }
                    catch (err) {
                        throw Error(Util.format("Search criteria for \"%s\" could not be validated: %s", key, err));
                    }
                    search.criteria.push(criteria);
                }
            }
        }
        return search;
    };
    ;
    return Search;
})();
exports.Search = Search;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNlYXJjaC50cyJdLCJuYW1lcyI6WyJTZWFyY2giLCJTZWFyY2guY29uc3RydWN0b3IiLCJTZWFyY2gudGVzdCIsIlNlYXJjaC5wYXJzZVN0cmluZyIsIlNlYXJjaC5wYXJzZSJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBWSxJQUFJLFdBQU0sTUFBTSxDQUFDLENBQUE7QUFDN0IsSUFBWSxXQUFXLFdBQU0sYUFBYSxDQUFDLENBQUE7QUFDM0MsK0JBQTZCLGtCQUFrQixDQUFDLENBQUE7QUFDaEQsMkJBQXlCLGNBQWMsQ0FBQyxDQUFBO0FBR3hDO0lBQUFBO1FBQ1dDLGFBQVFBLEdBQUdBLElBQUlBLEtBQUtBLEVBQWtCQSxDQUFDQTtJQXdFbERBLENBQUNBO0lBdEVVRCxxQkFBSUEsR0FBWEEsVUFBWUEsTUFBY0E7UUFDdEJFLElBQUlBLE9BQU9BLEdBQUdBLElBQUlBLENBQUNBO1FBRW5CQSxHQUFHQSxDQUFDQSxDQUFDQSxHQUFHQSxDQUFDQSxDQUFDQSxHQUFHQSxDQUFDQSxFQUFFQSxDQUFDQSxHQUFHQSxJQUFJQSxDQUFDQSxRQUFRQSxDQUFDQSxNQUFNQSxFQUFFQSxDQUFDQSxFQUFFQSxFQUFFQSxDQUFDQTtZQUM1Q0EsSUFBSUEsUUFBUUEsR0FBR0EsSUFBSUEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7WUFFaENBLEVBQUVBLENBQUNBLENBQUNBLENBQUNBLFFBQVFBLENBQUNBLElBQUlBLENBQUNBLE1BQU1BLENBQUNBLENBQUNBLENBQUNBLENBQUNBO2dCQUN6QkEsT0FBT0EsR0FBR0EsS0FBS0EsQ0FBQ0E7Z0JBQ2hCQSxLQUFLQSxDQUFDQTtZQUNWQSxDQUFDQTtRQUNMQSxDQUFDQTtRQUVEQSxNQUFNQSxDQUFDQSxPQUFPQSxDQUFDQTtJQUNuQkEsQ0FBQ0E7SUFFYUYsa0JBQVdBLEdBQXpCQSxVQUEwQkEsV0FBbUJBO1FBQ3pDRyxFQUFFQSxDQUFDQSxDQUFDQSxDQUFDQSxXQUFXQSxDQUFDQTtZQUFDQSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQTtRQUU5QkEsSUFBSUEsS0FBS0EsR0FBR0EsV0FBV0EsQ0FBQ0EsS0FBS0EsQ0FBQ0EsV0FBV0EsQ0FBQ0EsQ0FBQ0E7UUFFM0NBLE1BQU1BLENBQUNBLE1BQU1BLENBQUNBLEtBQUtBLENBQUNBLEtBQUtBLENBQUNBLENBQUNBO0lBQy9CQSxDQUFDQTtJQUVhSCxZQUFLQSxHQUFuQkEsVUFBb0JBLEtBQVVBO1FBQzFCSSxJQUFJQSxlQUFlQSxHQUFHQSxLQUFLQSxDQUFDQSx1QkFBVUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsQ0FBQ0E7UUFDL0NBLElBQUlBLE1BQU1BLEdBQUdBLElBQUlBLE1BQU1BLEVBQUVBLENBQUNBO1FBRTFCQSxFQUFFQSxDQUFDQSxDQUFDQSxlQUFlQSxJQUFJQSxJQUFJQSxDQUFDQSxDQUFDQSxDQUFDQTtZQUMxQkEsSUFBSUEsQ0FBQ0E7Z0JBQ0RBLGVBQWVBLEdBQUdBLElBQUlBLENBQUNBLEtBQUtBLENBQUNBLGVBQWVBLENBQUNBLENBQUNBO1lBQ2xEQSxDQUNBQTtZQUFBQSxLQUFLQSxDQUFDQSxDQUFDQSxHQUFHQSxDQUFDQSxDQUFDQSxDQUFDQTtnQkFDVEEsTUFBTUEsS0FBS0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0Esa0RBQWtEQSxFQUFFQSx1QkFBVUEsQ0FBQ0EsTUFBTUEsRUFBRUEsR0FBR0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7WUFDekdBLENBQUNBO1lBRURBLEdBQUdBLENBQUNBLENBQUNBLEdBQUdBLENBQUNBLEdBQUdBLElBQUlBLGVBQWVBLENBQUNBLENBQUNBLENBQUNBO2dCQUM5QkEsSUFBSUEsV0FBV0EsR0FBR0EsZUFBZUEsQ0FBQ0EsR0FBR0EsQ0FBQ0EsQ0FBQ0E7Z0JBQ3ZDQSxJQUFJQSxRQUFRQSxHQUFHQSxJQUFJQSwrQkFBY0EsQ0FBQ0EsV0FBV0EsQ0FBQ0EsU0FBU0EsRUFBRUEsV0FBV0EsQ0FBQ0EsUUFBUUEsRUFBRUEsV0FBV0EsQ0FBQ0EsS0FBS0EsQ0FBQ0EsQ0FBQ0E7Z0JBRWxHQSxJQUFJQSxDQUFDQTtvQkFDREEsUUFBUUEsQ0FBQ0EsUUFBUUEsRUFBRUEsQ0FBQ0E7Z0JBQ3hCQSxDQUNBQTtnQkFBQUEsS0FBS0EsQ0FBQ0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7b0JBQ1RBLE1BQU1BLElBQUlBLENBQUNBLE1BQU1BLENBQUNBLHVEQUF1REEsRUFBRUEsR0FBR0EsRUFBRUEsR0FBR0EsQ0FBQ0EsQ0FBQ0E7Z0JBQ3pGQSxDQUFDQTtnQkFFREEsTUFBTUEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsQ0FBQ0E7WUFDbkNBLENBQUNBO1FBQ0xBLENBQUNBO1FBRURBLEdBQUdBLENBQUNBLENBQUNBLEdBQUdBLENBQUNBLEdBQUdBLElBQUlBLEtBQUtBLENBQUNBLENBQUNBLENBQUNBO1lBQ3BCQSwyQ0FBMkNBO1lBQzNDQSxFQUFFQSxDQUFDQSxDQUFDQSx1QkFBVUEsQ0FBQ0EsR0FBR0EsQ0FBQ0EsSUFBSUEsSUFBSUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7Z0JBQzFCQSxJQUFJQSxRQUFRQSxHQUFHQSwrQkFBY0EsQ0FBQ0EsS0FBS0EsQ0FBQ0EsR0FBR0EsRUFBRUEsS0FBS0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7Z0JBRXJEQSxFQUFFQSxDQUFDQSxDQUFDQSxRQUFRQSxJQUFJQSxJQUFJQSxDQUFDQSxDQUFDQSxDQUFDQTtvQkFDbkJBLElBQUlBLENBQUNBO3dCQUNEQSxRQUFRQSxDQUFDQSxRQUFRQSxFQUFFQSxDQUFDQTtvQkFDeEJBLENBQ0FBO29CQUFBQSxLQUFLQSxDQUFDQSxDQUFDQSxHQUFHQSxDQUFDQSxDQUFDQSxDQUFDQTt3QkFDVEEsTUFBTUEsS0FBS0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsdURBQXVEQSxFQUFFQSxHQUFHQSxFQUFFQSxHQUFHQSxDQUFDQSxDQUFDQSxDQUFDQTtvQkFDaEdBLENBQUNBO29CQUVEQSxNQUFNQSxDQUFDQSxRQUFRQSxDQUFDQSxJQUFJQSxDQUFDQSxRQUFRQSxDQUFDQSxDQUFDQTtnQkFDbkNBLENBQUNBO1lBQ0xBLENBQUNBO1FBQ0xBLENBQUNBO1FBRURBLE1BQU1BLENBQUNBLE1BQU1BLENBQUNBO0lBQ2xCQSxDQUFDQTs7SUFDTEosYUFBQ0E7QUFBREEsQ0F6RUEsQUF5RUNBLElBQUE7QUF6RVksY0FBTSxTQXlFbEIsQ0FBQSIsImZpbGUiOiJTZWFyY2guanMiLCJzb3VyY2VSb290IjoiLi4vIn0=
