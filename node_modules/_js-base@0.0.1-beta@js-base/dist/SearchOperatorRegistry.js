var Util = require("util");
var SearchOperator_1 = require("./SearchOperator");
var SearchOperatorRegistry;
(function (SearchOperatorRegistry) {
    SearchOperatorRegistry.Equals = add(["equals", "eq"], function (entity, fieldName, value) {
        return (entity[fieldName] == value);
    });
    SearchOperatorRegistry.NotEquals = add(["not-equals", "neq"], function (entity, fieldName, value) {
        return !SearchOperatorRegistry.Equals.exec(entity, fieldName, value);
    });
    SearchOperatorRegistry.Matches = add(["matches", "regex", "re"], function (entity, fieldName, value) {
        var regexp = value;
        return (regexp.exec(entity[fieldName]) != null);
    }, function (value) { return new RegExp(value); });
    SearchOperatorRegistry.NotMatches = add(["not-matches", "not-regex", "nre"], function (entity, fieldName, value) {
        return !SearchOperatorRegistry.Matches.exec(entity, fieldName, value);
    }, function (value) { return new RegExp(value); });
    SearchOperatorRegistry.LessThan = add(["less-than", "lt"], function (entity, fieldName, value) {
        var entityValue = entity[fieldName];
        return (entityValue != null && entityValue < value);
    });
    SearchOperatorRegistry.LessThanOrEqual = add(["less-than-equal", "lte"], function (entity, fieldName, value) {
        var entityValue = entity[fieldName];
        return (entityValue != null && entityValue <= value);
    });
    SearchOperatorRegistry.GreaterThan = add(["greater-than", "gt"], function (entity, fieldName, value) {
        var entityValue = entity[fieldName];
        return (entityValue != null && entityValue > value);
    });
    SearchOperatorRegistry.GreaterThanOrEqual = add(["greater-than-equal", "gte"], function (entity, fieldName, value) {
        var entityValue = entity[fieldName];
        return (entityValue != null && entityValue >= value);
    });
    SearchOperatorRegistry.In = add("in", function (entity, fieldName, value) {
        var values = value;
        return (values.indexOf(entity[fieldName]) >= 0);
    }, function (value) { return value.toString().split(","); });
    SearchOperatorRegistry.NotIn = add("not-in", function (entity, fieldName, value) {
        return !SearchOperatorRegistry.In.exec(entity, fieldName, value);
    }, function (value) { return value.toString().split(","); });
    SearchOperatorRegistry.Default = SearchOperatorRegistry.Equals;
    function add(aliases, exec, parseValue, validateValue) {
        if (parseValue === void 0) { parseValue = null; }
        if (validateValue === void 0) { validateValue = null; }
        return addOperator(new SearchOperator_1.SearchOperator(aliases, exec, parseValue, validateValue));
    }
    SearchOperatorRegistry.add = add;
    function addOperator(operator) {
        operator.aliases.forEach(function (alias) {
            SearchOperatorRegistry[alias] = operator;
        });
        return operator;
    }
    SearchOperatorRegistry.addOperator = addOperator;
    function get(name) {
        return SearchOperatorRegistry[name];
    }
    SearchOperatorRegistry.get = get;
    function resolve(operator) {
        var resolvedOperator = null;
        if (operator == null)
            resolvedOperator = SearchOperatorRegistry.Default;
        else if (operator instanceof SearchOperator_1.SearchOperator)
            resolvedOperator = operator;
        else if (typeof operator === "string")
            resolvedOperator = SearchOperatorRegistry.get(operator);
        if (resolvedOperator != null)
            return resolvedOperator;
        throw Error(Util.format("Could not resolve operator \"%s\".", operator));
    }
    SearchOperatorRegistry.resolve = resolve;
})(SearchOperatorRegistry = exports.SearchOperatorRegistry || (exports.SearchOperatorRegistry = {}));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNlYXJjaE9wZXJhdG9yUmVnaXN0cnkudHMiXSwibmFtZXMiOlsiU2VhcmNoT3BlcmF0b3JSZWdpc3RyeSIsIlNlYXJjaE9wZXJhdG9yUmVnaXN0cnkuYWRkIiwiU2VhcmNoT3BlcmF0b3JSZWdpc3RyeS5hZGRPcGVyYXRvciIsIlNlYXJjaE9wZXJhdG9yUmVnaXN0cnkuZ2V0IiwiU2VhcmNoT3BlcmF0b3JSZWdpc3RyeS5yZXNvbHZlIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFZLElBQUksV0FBTSxNQUFNLENBQUMsQ0FBQTtBQUM3QiwrQkFBNkIsa0JBQWtCLENBQUMsQ0FBQTtBQUdoRCxJQUFjLHNCQUFzQixDQXNGbkM7QUF0RkQsV0FBYyxzQkFBc0IsRUFBQyxDQUFDO0lBQ3ZCQSw2QkFBTUEsR0FBR0EsR0FBR0EsQ0FBQ0EsQ0FBQ0EsUUFBUUEsRUFBRUEsSUFBSUEsQ0FBQ0EsRUFBRUEsVUFBQ0EsTUFBY0EsRUFBRUEsU0FBaUJBLEVBQUVBLEtBQVVBO1FBQ3BGQSxNQUFNQSxDQUFDQSxDQUFDQSxNQUFNQSxDQUFDQSxTQUFTQSxDQUFDQSxJQUFJQSxLQUFLQSxDQUFDQSxDQUFDQTtJQUN4Q0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7SUFFUUEsZ0NBQVNBLEdBQUdBLEdBQUdBLENBQUNBLENBQUNBLFlBQVlBLEVBQUVBLEtBQUtBLENBQUNBLEVBQUVBLFVBQUNBLE1BQWNBLEVBQUVBLFNBQWlCQSxFQUFFQSxLQUFVQTtRQUM1RkEsTUFBTUEsQ0FBQ0EsQ0FBQ0EsNkJBQU1BLENBQUNBLElBQUlBLENBQUNBLE1BQU1BLEVBQUVBLFNBQVNBLEVBQUVBLEtBQUtBLENBQUNBLENBQUNBO0lBQ2xEQSxDQUFDQSxDQUFDQSxDQUFDQTtJQUVRQSw4QkFBT0EsR0FBR0EsR0FBR0EsQ0FBQ0EsQ0FBQ0EsU0FBU0EsRUFBRUEsT0FBT0EsRUFBRUEsSUFBSUEsQ0FBQ0EsRUFBRUEsVUFBQ0EsTUFBY0EsRUFBRUEsU0FBaUJBLEVBQUVBLEtBQVVBO1FBQy9GQSxJQUFJQSxNQUFNQSxHQUFXQSxLQUFLQSxDQUFDQTtRQUUzQkEsTUFBTUEsQ0FBQ0EsQ0FBQ0EsTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsU0FBU0EsQ0FBQ0EsQ0FBQ0EsSUFBSUEsSUFBSUEsQ0FBQ0EsQ0FBQ0E7SUFDcERBLENBQUNBLEVBQUVBLFVBQUNBLEtBQVVBLElBQUtBLE9BQUFBLElBQUlBLE1BQU1BLENBQUNBLEtBQUtBLENBQUNBLEVBQWpCQSxDQUFpQkEsQ0FBQ0EsQ0FBQ0E7SUFFM0JBLGlDQUFVQSxHQUFHQSxHQUFHQSxDQUFDQSxDQUFDQSxhQUFhQSxFQUFFQSxXQUFXQSxFQUFFQSxLQUFLQSxDQUFDQSxFQUFFQSxVQUFDQSxNQUFjQSxFQUFFQSxTQUFpQkEsRUFBRUEsS0FBVUE7UUFDM0dBLE1BQU1BLENBQUNBLENBQUNBLDhCQUFPQSxDQUFDQSxJQUFJQSxDQUFDQSxNQUFNQSxFQUFFQSxTQUFTQSxFQUFFQSxLQUFLQSxDQUFDQSxDQUFDQTtJQUNuREEsQ0FBQ0EsRUFBRUEsVUFBQ0EsS0FBVUEsSUFBS0EsT0FBQUEsSUFBSUEsTUFBTUEsQ0FBQ0EsS0FBS0EsQ0FBQ0EsRUFBakJBLENBQWlCQSxDQUFDQSxDQUFDQTtJQUUzQkEsK0JBQVFBLEdBQUdBLEdBQUdBLENBQUNBLENBQUNBLFdBQVdBLEVBQUVBLElBQUlBLENBQUNBLEVBQUVBLFVBQUNBLE1BQWNBLEVBQUVBLFNBQWlCQSxFQUFFQSxLQUFVQTtRQUN6RkEsSUFBSUEsV0FBV0EsR0FBR0EsTUFBTUEsQ0FBQ0EsU0FBU0EsQ0FBQ0EsQ0FBQ0E7UUFFcENBLE1BQU1BLENBQUNBLENBQUNBLFdBQVdBLElBQUlBLElBQUlBLElBQUlBLFdBQVdBLEdBQUdBLEtBQUtBLENBQUNBLENBQUNBO0lBQ3hEQSxDQUFDQSxDQUFDQSxDQUFDQTtJQUVRQSxzQ0FBZUEsR0FBR0EsR0FBR0EsQ0FBQ0EsQ0FBQ0EsaUJBQWlCQSxFQUFFQSxLQUFLQSxDQUFDQSxFQUFFQSxVQUFDQSxNQUFjQSxFQUFFQSxTQUFpQkEsRUFBRUEsS0FBVUE7UUFDdkdBLElBQUlBLFdBQVdBLEdBQUdBLE1BQU1BLENBQUNBLFNBQVNBLENBQUNBLENBQUNBO1FBRXBDQSxNQUFNQSxDQUFDQSxDQUFDQSxXQUFXQSxJQUFJQSxJQUFJQSxJQUFJQSxXQUFXQSxJQUFJQSxLQUFLQSxDQUFDQSxDQUFDQTtJQUN6REEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7SUFFUUEsa0NBQVdBLEdBQUdBLEdBQUdBLENBQUNBLENBQUNBLGNBQWNBLEVBQUVBLElBQUlBLENBQUNBLEVBQUVBLFVBQUNBLE1BQWNBLEVBQUVBLFNBQWlCQSxFQUFFQSxLQUFVQTtRQUMvRkEsSUFBSUEsV0FBV0EsR0FBR0EsTUFBTUEsQ0FBQ0EsU0FBU0EsQ0FBQ0EsQ0FBQ0E7UUFFcENBLE1BQU1BLENBQUNBLENBQUNBLFdBQVdBLElBQUlBLElBQUlBLElBQUlBLFdBQVdBLEdBQUdBLEtBQUtBLENBQUNBLENBQUNBO0lBQ3hEQSxDQUFDQSxDQUFDQSxDQUFDQTtJQUVRQSx5Q0FBa0JBLEdBQUdBLEdBQUdBLENBQUNBLENBQUNBLG9CQUFvQkEsRUFBRUEsS0FBS0EsQ0FBQ0EsRUFBRUEsVUFBQ0EsTUFBY0EsRUFBRUEsU0FBaUJBLEVBQUVBLEtBQVVBO1FBQzdHQSxJQUFJQSxXQUFXQSxHQUFHQSxNQUFNQSxDQUFDQSxTQUFTQSxDQUFDQSxDQUFDQTtRQUVwQ0EsTUFBTUEsQ0FBQ0EsQ0FBQ0EsV0FBV0EsSUFBSUEsSUFBSUEsSUFBSUEsV0FBV0EsSUFBSUEsS0FBS0EsQ0FBQ0EsQ0FBQ0E7SUFDekRBLENBQUNBLENBQUNBLENBQUNBO0lBRVFBLHlCQUFFQSxHQUFHQSxHQUFHQSxDQUFDQSxJQUFJQSxFQUFFQSxVQUFDQSxNQUFjQSxFQUFFQSxTQUFpQkEsRUFBRUEsS0FBVUE7UUFDcEVBLElBQUlBLE1BQU1BLEdBQWtCQSxLQUFLQSxDQUFDQTtRQUVsQ0EsTUFBTUEsQ0FBQ0EsQ0FBQ0EsTUFBTUEsQ0FBQ0EsT0FBT0EsQ0FBQ0EsTUFBTUEsQ0FBQ0EsU0FBU0EsQ0FBQ0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7SUFDcERBLENBQUNBLEVBQUVBLFVBQUNBLEtBQVVBLElBQUtBLE9BQUFBLEtBQUtBLENBQUNBLFFBQVFBLEVBQUVBLENBQUNBLEtBQUtBLENBQUNBLEdBQUdBLENBQUNBLEVBQTNCQSxDQUEyQkEsQ0FBQ0EsQ0FBQ0E7SUFFckNBLDRCQUFLQSxHQUFHQSxHQUFHQSxDQUFDQSxRQUFRQSxFQUFFQSxVQUFDQSxNQUFjQSxFQUFFQSxTQUFpQkEsRUFBRUEsS0FBVUE7UUFDM0VBLE1BQU1BLENBQUNBLENBQUNBLHlCQUFFQSxDQUFDQSxJQUFJQSxDQUFDQSxNQUFNQSxFQUFFQSxTQUFTQSxFQUFFQSxLQUFLQSxDQUFDQSxDQUFDQTtJQUM5Q0EsQ0FBQ0EsRUFBRUEsVUFBQ0EsS0FBVUEsSUFBS0EsT0FBQUEsS0FBS0EsQ0FBQ0EsUUFBUUEsRUFBRUEsQ0FBQ0EsS0FBS0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsRUFBM0JBLENBQTJCQSxDQUFDQSxDQUFDQTtJQUVyQ0EsOEJBQU9BLEdBQUdBLHNCQUFzQkEsQ0FBQ0EsTUFBTUEsQ0FBQ0E7SUFFbkRBLGFBQW9CQSxPQUE2QkEsRUFBRUEsSUFBNkJBLEVBQUVBLFVBQXNDQSxFQUFFQSxhQUEwQ0E7UUFBbEZDLDBCQUFzQ0EsR0FBdENBLGlCQUFzQ0E7UUFBRUEsNkJBQTBDQSxHQUExQ0Esb0JBQTBDQTtRQUNoS0EsTUFBTUEsQ0FBQ0EsV0FBV0EsQ0FBQ0EsSUFBSUEsK0JBQWNBLENBQUNBLE9BQU9BLEVBQUVBLElBQUlBLEVBQUVBLFVBQVVBLEVBQUVBLGFBQWFBLENBQUNBLENBQUNBLENBQUNBO0lBQ3JGQSxDQUFDQTtJQUZlRCwwQkFBR0EsTUFFbEJBLENBQUFBO0lBRURBLHFCQUE0QkEsUUFBd0JBO1FBQ2hERSxRQUFRQSxDQUFDQSxPQUFPQSxDQUFDQSxPQUFPQSxDQUFDQSxVQUFDQSxLQUFhQTtZQUNuQ0Esc0JBQXNCQSxDQUFDQSxLQUFLQSxDQUFDQSxHQUFHQSxRQUFRQSxDQUFDQTtRQUM3Q0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7UUFFSEEsTUFBTUEsQ0FBQ0EsUUFBUUEsQ0FBQ0E7SUFDcEJBLENBQUNBO0lBTmVGLGtDQUFXQSxjQU0xQkEsQ0FBQUE7SUFFREEsYUFBb0JBLElBQVlBO1FBQzVCRyxNQUFNQSxDQUFDQSxzQkFBc0JBLENBQUNBLElBQUlBLENBQUNBLENBQUNBO0lBQ3hDQSxDQUFDQTtJQUZlSCwwQkFBR0EsTUFFbEJBLENBQUFBO0lBRURBLGlCQUF3QkEsUUFBK0JBO1FBQ25ESSxJQUFJQSxnQkFBZ0JBLEdBQW1CQSxJQUFJQSxDQUFDQTtRQUU1Q0EsRUFBRUEsQ0FBQ0EsQ0FBQ0EsUUFBUUEsSUFBSUEsSUFBSUEsQ0FBQ0E7WUFDakJBLGdCQUFnQkEsR0FBR0Esc0JBQXNCQSxDQUFDQSxPQUFPQSxDQUFDQTtRQUN0REEsSUFBSUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsQ0FBQ0EsUUFBUUEsWUFBWUEsK0JBQWNBLENBQUNBO1lBQ3hDQSxnQkFBZ0JBLEdBQUdBLFFBQVFBLENBQUNBO1FBQ2hDQSxJQUFJQSxDQUFDQSxFQUFFQSxDQUFDQSxDQUFDQSxPQUFPQSxRQUFRQSxLQUFLQSxRQUFRQSxDQUFDQTtZQUNsQ0EsZ0JBQWdCQSxHQUFHQSxzQkFBc0JBLENBQUNBLEdBQUdBLENBQVNBLFFBQVFBLENBQUNBLENBQUNBO1FBRXBFQSxFQUFFQSxDQUFDQSxDQUFDQSxnQkFBZ0JBLElBQUlBLElBQUlBLENBQUNBO1lBQ3pCQSxNQUFNQSxDQUFDQSxnQkFBZ0JBLENBQUNBO1FBRTVCQSxNQUFNQSxLQUFLQSxDQUFDQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxvQ0FBb0NBLEVBQUVBLFFBQVFBLENBQUNBLENBQUNBLENBQUNBO0lBQzdFQSxDQUFDQTtJQWRlSiw4QkFBT0EsVUFjdEJBLENBQUFBO0FBQ0xBLENBQUNBLEVBdEZhLHNCQUFzQixHQUF0Qiw4QkFBc0IsS0FBdEIsOEJBQXNCLFFBc0ZuQyIsImZpbGUiOiJTZWFyY2hPcGVyYXRvclJlZ2lzdHJ5LmpzIiwic291cmNlUm9vdCI6Ii4uLyJ9
