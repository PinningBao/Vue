import { IDbProcessor } from "./IDbProcessor";
import { DbCommand } from "./DbCommand";
import { Config } from "./Config";
import { Search } from "./Search";
import { PersistenceError } from "./PersistenceError";
export declare class DbProcessor implements IDbProcessor {
    private config;
    constructor(config: Config);
    getSingle(dbCommand: DbCommand, callback: (data: string, err?: string) => any): void;
    getMany(dbCommand: DbCommand, search: Search, callback: (data: Array<string>, errors?: Array<PersistenceError>, err?: string) => any): void;
    saveSingle(dbCommand: DbCommand, entity: any, callback: (data: string, err?: string) => any): void;
    saveMany(dbCommand: DbCommand, entities: Array<any>, callback: (data: Array<string>, errors: Array<PersistenceError>) => any): void;
    deleteSingle(dbCommand: DbCommand, callback: (err?: string) => any): void;
    deleteMany(dbCommand: DbCommand, ids: Array<string>, callback: (ids: Array<string>, errors: Array<PersistenceError>) => any): void;
}
